<?xml version='1.0'?>
<Wix xmlns="http://schemas.microsoft.com/wix/2006/wi" xmlns:util="http://schemas.microsoft.com/wix/UtilExtension">

  <!-- This is how we include wxi files -->
  <?include "parameters.wxi" ?>

  <!--
    Id="*" is to enable upgrading. * means that the product ID will be autogenerated on each build.
    Name is made of localized product name and version number.
  -->
  <Product Id="*" Name="!(loc.ProductName) v$(var.DisplayVersionNumber)" Language="!(loc.LANG)"
          Version="$(var.VersionNumber)" Manufacturer="!(loc.ManufacturerName)" UpgradeCode="$(var.UpgradeCode)">

    <!--
      Define the minimum supported installer version (2.0).
      The install should be done for the whole machine not just the current user
    -->
    <Package InstallerVersion="200" InstallPrivileges="elevated"
             Compressed="yes" InstallScope="perMachine" />

    <!--
      Create property references for the well known SIDs of the
      accounts we want to restrict for the project location folder
    -->
    <PropertyRef Id="WIX_ACCOUNT_LOCALSYSTEM" />
    <PropertyRef Id="WIX_ACCOUNT_ADMINISTRATORS" />
    <PropertyRef Id="WIX_ACCOUNT_USERS" />

    <Media Id="1" Cabinet="AeroBase.cab" EmbedCab="yes" CompressionLevel="high" />

    <!--
    Take advantage of Windows Installer 5.0 feature (if available) to disable 
    checkpointing and other costings that take significant amounts of time 
    ref: https://msdn.microsoft.com/en-us/library/windows/desktop/dd408005(v=vs.85).aspx
    -->
    <Property Id="MSIFASTINSTALL" Value="7" />
    
    <!--
      Uncomment launch condition below to check for minimum OS
      601 = Windows 7/Server 2008R2.
    -->
    <!-- Condition Message="!(loc.MinimumOSVersionMessage)">
      <![CDATA[Installed OR VersionNT >= 601]]>
    </Condition -->

    <!-- We always do Major upgrades -->
    <MajorUpgrade DowngradeErrorMessage="!(loc.DowngradeErrorMessage)" />

    <!--
      If fastmsi is set, custom actions will be invoked during install to unzip
      project files, and during uninstall to remove the project folder
    -->
    <% if fastmsi %>
    <SetProperty Id="FastUnzip"
                 Value="FASTZIPDIR=[INSTALLLOCATION];FASTZIPAPPNAME=$(var.ProjectLocationDir)"
                 Sequence="execute"
                 Before="FastUnzip" />

	<CustomAction Id="DefenderExcludeAerobaseHome"
                  Directory="INSTALLLOCATION"
                  ExeCommand="powershell -WindowStyle Hidden -Command &quot;Add-MpPreference -ExclusionPath '[INSTALLLOCATION]'&quot;"
                  Execute="deferred"
                  Impersonate="no"
                  Return="ignore" />
				  
    <CustomAction Id="FastUnzip"
                  BinaryKey="CustomActionFastMsiDLL"
                  DllEntry="FastUnzip"
                  Execute="deferred"
                  Impersonate="no"
                  Return="check" />

	<CustomAction Id="UpdateInstallationPath"
                  Directory="INSTALLLOCATION"
                  ExeCommand="powershell -WindowStyle Hidden -Command &quot;$(var.ProjectLocationDir)\bin\aerobase-bootstrap.ps1 '[INSTALLLOCATION]'&quot;"
                  Execute="deferred"
                  Impersonate="no"
                  Return="ignore" />
				  
	<CustomAction Id="InstallCRedistributable"
                  Directory="INSTALLLOCATION"
                  ExeCommand="powershell -WindowStyle Hidden -Command &quot;$(var.ProjectLocationDir)\embedded\apps\mscplus\vcredist_x64.exe /q&quot;"
                  Execute="deferred"
                  Impersonate="no"
                  Return="ignore" />
				  
    <Binary Id="CustomActionFastMsiDLL"
            SourceFile="CustomActionFastMsi.CA.dll" />

    <CustomAction Id="Cleanup"
                  Directory="INSTALLLOCATION"
                  ExeCommand="cmd /C &quot;rd /S /Q $(var.ProjectLocationDir)&quot;"
                  Execute="deferred"
                  Impersonate="no"
                  Return="ignore" />

    <InstallExecuteSequence>
	  <Custom Action="DefenderExcludeAerobaseHome" Before="FastUnzip">NOT Installed</Custom>
      <Custom Action="FastUnzip" After="InstallFiles">NOT Installed</Custom>
	  <Custom Action="UpdateInstallationPath" After="FastUnzip">NOT Installed</Custom>
	  <Custom Action="InstallCRedistributable" After="UpdateInstallationPath">NOT Installed</Custom>
      <Custom Action="Cleanup" After="RemoveFiles">REMOVE~="ALL"</Custom>
    </InstallExecuteSequence>

    <UI>
      <ProgressText Action="FastUnzip">!(loc.FileExtractionProgress)</ProgressText>
    </UI>
    <% end %>

    <Directory Id="TARGETDIR" Name="SourceDir">
      <Directory Id="WindowsVolume">
        <Directory Id="INSTALLLOCATION" Name="Aerobase">
          <Directory Id="PROJECTLOCATION" Name="$(var.ProjectLocationDir)" >
            <Component Id="ProjectLocationPermissions" Guid="{986f0f71-d3d4-438c-b7fc-fd7c6f5be178}" >
              <!--
                Windows client SKUs give the Authenticated Users group modify rights
                to new folders created. We ONLY want the local system account and any administrator to have that right to protect non admin users from injecting code that could be executed by a service running as SYSTEM
              -->
              <CreateFolder>
                <Permission User="[WIX_ACCOUNT_LOCALSYSTEM]" GenericAll="yes"/>
                <Permission User="[WIX_ACCOUNT_ADMINISTRATORS]" GenericAll="yes"/>
                <Permission User="[WIX_ACCOUNT_USERS]" GenericRead="yes" GenericExecute="yes"/>
              </CreateFolder>
            </Component>
            <Directory Id="PROJECTLOCATIONBIN" Name="bin" >
              <Component Id="AerobasePath" Guid="{ccab34f4-050e-4f86-84f8-53c1269a582f}" >
                <Environment Id="AerobasePathEnvironment"
                             Name="PATH" Action="set" Part="last" System="yes" Value="[PROJECTLOCATIONBIN]" />
              </Component>
            </Directory>
			<Directory Id="PROJECTLOCATIONSBIN" Name="embedded" >
              <Component Id="AerobasePathSbin" Guid="{ccab34f4-151e-4f86-84f8-53c1269a582f}" >
				<!-- Ruby mixlib shellout ignore first path line. -->
				<!-- We add aerobase path twice to overcome this.  -->
				<!-- TODO - A better workaround would fix path in helper.rb->ShellOutHelper -->
				<Environment Id="AerobasePathEnvironmentSbin"
                             Name="PATH" Action="set" Part="first" System="yes" Value="[PROJECTLOCATIONSBIN]sbin" />
              </Component>
            </Directory>
          </Directory>
		  <Directory Id="PROJECTDATA" Name="Data" >
            <Component Id="DataLocationPermissions" Guid="{986f0f71-d3d4-438c-b7fc-fd7c6f5be256}" >
              <!--
                Windows client SKUs give the Authenticated Users group modify rights
                to new folders created. We ONLY want the local system account and any administrator to have that right to protect non admin users from injecting code that could be executed by a service running as SYSTEM
              -->
              <CreateFolder>
                <Permission User="[WIX_ACCOUNT_LOCALSYSTEM]" GenericAll="yes"/>
                <Permission User="[WIX_ACCOUNT_ADMINISTRATORS]" GenericAll="yes"/>
                <Permission User="[WIX_ACCOUNT_USERS]" GenericRead="yes" GenericExecute="yes"/>
              </CreateFolder>
            </Component>
			<Directory Id="NGINX" Name="nginx" >
			  <Component Id="NginxLocation" Guid="{f89e55ed-818d-475e-90f1-19b7d938bbe1}">
			    <CreateFolder />
			  </Component>
			  <Directory Id="NGINXCONFD" Name="conf.d" >
				<Component Id="NginxConfdLocation" Guid="{cb2ea8b4-9436-4315-99fb-a1552bd651e1}">
				  <CreateFolder />
				</Component>
			  </Directory>
			</Directory>
		  </Directory>
        </Directory>
      </Directory>
    </Directory>

    <!-- Set the components defined in our fragment files that will be used for our feature  -->
    <Feature Id="AeroBaseFeature" Title="!(loc.FeatureMainName)" Absent="disallow" AllowAdvertise="no" Level="1" ConfigurableDirectory="INSTALLLOCATION">
      <ComponentGroupRef Id="ProjectDir" />
      <ComponentRef Id="ProjectLocationPermissions" />
	  <ComponentRef Id="DataLocationPermissions" />
	  <ComponentRef Id="NginxLocation" />
	  <ComponentRef Id="NginxConfdLocation" />
      <ComponentRef Id="AerobasePath" />
	  <ComponentRef Id="AerobasePathSbin" />
    </Feature>

    <!--
      UI Stuff
    -->
    <Icon Id="oc.ico" SourceFile="Resources\assets\oc_16x16.ico"/>
    <Property Id="ARPPRODUCTICON" Value="oc.ico" />
    <Property Id="ARPHELPLINK" Value="https://aerobase.io/iam" />
    <Property Id="WIXUI_INSTALLDIR" Value="INSTALLLOCATION" />

    <UIRef Id="OmnibusToolchainUI_InstallDir"/>
    <UI Id="OmnibusToolchainUI_InstallDir">
      <UIRef Id="WixUI_FeatureTree"/>
      <TextStyle Id="WixUI_Font_Normal_White" FaceName="Tahoma" Size="8" Red="255" Green="255" Blue="255" />
      <TextStyle Id="WixUI_Font_Bigger_White" FaceName="Tahoma" Size="12" Red="255" Green="255" Blue="255" />
      <TextStyle Id="WixUI_Font_Title_White" FaceName="Tahoma" Size="9" Bold="yes" Red="255" Green="255" Blue="255" />
    </UI>

    <WixVariable Id="WixUILicenseRtf" Value="Resources\assets\LICENSE.rtf" />
    <WixVariable Id="WixUIDialogBmp" Value="Resources\assets\dialog_background.bmp" />
    <WixVariable Id="WixUIBannerBmp" Value="Resources\assets\banner_background.bmp" />

    <WixVariable Id="WixUIExclamationIco" Value="Resources\assets\oc_32x32.ico" />
    <WixVariable Id="WixUIInfoIco" Value="Resources\assets\oc_32x32.ico" />
    <WixVariable Id="WixUINewIco" Value="Resources\assets\oc_16x16.ico" />
    <WixVariable Id="WixUIUpIco" Value="Resources\assets\oc_16x16.ico" />

  </Product>
</Wix>
