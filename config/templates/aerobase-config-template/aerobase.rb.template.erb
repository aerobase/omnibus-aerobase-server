# Url on which aerobase will be reachable.
external_url 'GENERATED_EXTERNAL_URL'

# Note: configuration settings below are optional.
## Uncomment and change the value.
#############################
# aerobase.rb configuration #
#############################

####
# The Aerobase User that services run as
####
## The username for the aerobase services user
# user['username'] = "aerobase"
## group name, including fully qualified group names such as domain\\group or group@domain
# user['group'] = "aerobase-group"
## When false user/group will not be managed by aerobase
# user['manage_accounts'] = true
# user['none_root'] = false
## Used only under windows os
# user['password'] = "$1$8AKNexhr$XEYpJFyWMcI.c96XLKLSk/"
# user['uid'] = nil
# user['gid'] = nil
## The shell for the aerobase services user
# user['shell'] = "/bin/sh"
## The home directory for the aerobase services user
# user['home'] = "#{node['package']['runtime-dir']}"

####
# Global (Cross component) configuration
###
## When setting contactpoints, make sure all 'fqdn's are resolved to none loopback addresses.
## Examples: "IP1,IP2" | "IP1[PORT],IP2[PORT]", default port when not set 7600 
# global['contactpoints'] = node['fqdn']
# global['backup_path'] = "#{node['package']['runtime-dir']}/backups"
# global['portal_mode'] = false

## Windows services labeling only.
# global['srv_label'] = "Aerobase"
# global['srv_start'] = true

####
# Unifiedpush Applicaiton Server 
####
# aerobase_server['enable'] = true
# aerobase_server['ha'] = false
# aerobase_server['dir'] = "#{node['package']['runtime-dir']}/aerobase-server"
# aerobase_server['log_directory'] = "#{node['package']['logs-dir']}/aerobase-server"
# aerobase_server['environment'] = 'production'
#
## Delayed start service on windows
# aerobase_server['delayed_start'] = false
# aerobase_server['documents_directory'] = "#{node['package']['runtime-dir']}/aerobase-server/documents"
# aerobase_server['uploads_directory'] = "#{node['package']['runtime-dir']}/aerobase-server/uploads"
## Max JSON size in KB
# aerobase_server['documents_json_limit'] = 4
## By default server_host is extracted from external URL
# aerobase_server['server_host'] = node['fqdn']
## Internal network bind address. If the node has a default route, this is the IPV4 address for the interface.
## Uncomment this line in case of cluster contactpoints. unless commented out, default bind is set to loopback
# aerobase_server['server_address'] = node['ipaddress'] 
# aerobase_server['server_contactpoints'] = node['fqdn']
# aerobase_server['jgroups_stack'] = "tcpping"
# aerobase_server['server_port'] = 8080
# aerobase_server['server_https'] = false
# aerobase_server['ssl_certificate'] = "#{node['package']['runtime-dir']}/aerobase-server/tls.crt"
# aerobase_server['ssl_certificate_key'] = "#{node['package']['runtime-dir']}/aerobase-server/tls.key"
# aerobase_server['time_zone'] = nil
# aerobase_server['cache_owners'] = 1
# aerobase_server['java_xmx'] = "1g"
# aerobase_server['java_opts'] = nil
## Database connection params
# aerobase_server['db_initialize'] = true
# aerobase_server['db_adapter'] = "postgresql"
# aerobase_server['db_sslmode'] = false
# aerobase_server['db_jdbc_flags'] = nil

####
# Keycloak Server app
####
# keycloak_server['enable'] = true
## Install additional aerobase spi/addons services
# keycloak_server['aerobase_spi'] = true
# keycloak_server['aerobase_addons'] = false
# keycloak_server['aerobase_patch'] = true
# keycloak_server['private_themes'] = false
# keycloak_server['ha'] = false
# When keycloak-server is disabled, server_host should point to external URL.
# keycloak_server['server_host'] = node['fqdn']
# keycloak_server['server_https'] = false
# keycloak_server['cache_owners'] = 1
# keycloak_server['cache_stack'] = "udp"
# keycloak_server['cache_size'] = 10000
# keycloak_server['theme_cache'] = true
# keycloak_server['start_timeout'] = "600"
# keycloak_server['start_flags'] = ""
# keycloak_server['build_flags'] = ""
# keycloak_server['proxy_headers'] = "forwarded"
# keycloak_server['db_database'] = "keycloak_server"
## db_username, db_host, db_port oveeridden by postgresql/mssql properties [sql_kc_user, listen_address, port]
## When explicitly seting a value for db_username, db_host, db_port we will never override from postgresql/mssql sql_kc_user, listen_address, port
# keycloak_server['db_username'] = "keycloak_server"
# keycloak_server['db_password'] = nil
# keycloak_server['db_host'] = "localhost"
# keycloak_server['db_port'] = nil
# keycloak_server['db_pool'] = "10"
# keycloak_server['realm_default_enable'] = true
## Additional realm files array. e.g ['filepath', 'filepath']
# keycloak_server['realm_files'] = []

###
# PostgreSQL - Default database
###
# postgresql['enable'] = true
# postgresql['ha'] = false
# postgresql['dir'] = "#{node['package']['runtime-dir']}/postgresql"
# postgresql['data_dir'] = "#{node['package']['runtime-dir']}/postgresql/data"
# postgresql['log_directory'] = "#{node['package']['logs-dir']}/postgresql"
## Unix socket directory is supported only for linux.
# postgresql['server'] = "localhost"
# postgresql['username'] = "aerobase-sql"
## Used only when pointing to external database or under windows
# postgresql['password'] = "$1$8AKNexhr$XEYpJFyWMcI.c96XLKLSk/"
# postgresql['uid'] = nil
# postgresql['gid'] = nil
# postgresql['shell'] = "/bin/sh"
# postgresql['home'] = "#{node['package']['runtime-dir']}/postgresql"
## Delayed start service on windows
# postgresql['delayed_start'] = false
## Postgres User's Environment Path
## defaults to /opt/unifiedpush/embedded/bin:/opt/unifiedpush/bin/$PATH. The install-dir path is set at build time
# postgresql['user_path'] = "#{node['package']['install-dir']}/embedded/bin:#{node['package']['install-dir']}/bin:$PATH"
# postgresql['bin_dir'] = "#{node['package']['install-dir']}/embedded/bin"
# postgresql['sql_kc_user'] = "keycloak_server"
# postgresql['port'] = 5432
# postgresql['listen_address'] = 'localhost'
# postgresql['max_connections'] = 200
# postgresql['md5_auth_cidr_addresses'] = []
# postgresql['trust_auth_cidr_addresses'] = ['localhost', '127.0.0.1/32','::1/128']
# postgresql['shmmax'] = kernel['machine'] =~ /x86_64/ ? 17179869184 : 4294967295
# postgresql['shmall'] = kernel['machine'] =~ /x86_64/ ? 4194304 : 1048575
# postgresql['shared_buffers'] = "2048MB"
#
# postgresql['work_mem'] = "8MB"
# postgresql['effective_cache_size'] = "#{(node['memory']['total'].to_i / 2) / (1024)}MB"
# postgresql['max_wal_size'] = "1GB"
# postgresql['checkpoint_timeout'] = "5min"
# postgresql['checkpoint_completion_target'] = 0.9
# postgresql['checkpoint_warning'] = "30s"

###
# MSSQL - Installation is not supported, only jdbc/odbc usage.
# Since we don't install mssql, username/password referrer db and not os.
###
# mssql['server'] = "localhost"
# mssql['port'] = 1433
# mssql['username'] = "sa"
# mssql['password'] = "sa"
# mssql['logon'] = true
# mssql['azure_logon'] = false 
# mssql['instance'] = nil

###
# MySQL - Installation is not supported, only jdbc usage.
###
# mysql['server'] = "localhost"
# mysql['port'] = 3306
# mysql['username'] = "root"
# mysql['password'] = "password"
# mysql['selective_privileges'] = false

###
# MariaDB - Installation is not supported, only jdbc usage.
###
# mariadb['server'] = "localhost"
# mariadb['port'] = 3306
# mariadb['username'] = "root"
# mariadb['password'] = "password"
# mariadb['selective_privileges'] = false

####
# Web server
####
## see: https://github.com/aerobase/omnibus-aerobase-server/blob/master/doc/settings/nginx.md#using-a-non-bundled-web-server
## When bundled nginx is disabled we need to add the external webserver user to the Aerobase webserver group.
# web_server['username'] = 'aerobase-www'
# web_server['password'] = '$1$8AKNexhr$XEYpJFyWMcI.c96XLKLSk/'
# web_server['uid'] = nil
# web_server['gid'] = nil
# web_server['shell'] = '/bin/false'
# web_server['home'] = '{node['package']['runtime-dir']}/nginx'
# web_server['external_users'] = []

####
#NGINX
####
# nginx['enable'] = true
# nginx['ha'] = false
## Delayed start service on windows
# nginx['delayed_start'] = false
# nginx['dir'] = "#{node['package']['runtime-dir']}/nginx"
# nginx['log_directory'] = "#{node['package']['logs-dir']}/nginx"
# nginx['log_2xx_3xx'] = true
# nginx['worker_processes'] = node['cpu']['total'].to_i
# nginx['worker_connections'] = 10240
## If youâ€™re serving locally stored static files, sendfile is totally essential to speed your Web server. 
## But if you use Nginx as a reverse proxy to serve pages from an application server, you can deactivate it.
# nginx['sendfile'] = 'off'
# nginx['tcp_nopush'] = 'on'
# nginx['tcp_nodelay'] = 'on'
# nginx['proxy_buffer_size'] = '8k'
# nginx['proxy_buffers'] = '32 16k'
# nginx['proxy_busy_buffers_size'] = '32k'
# nginx['server_names_hash_bucket_size'] = "64"
# nginx['gzip'] = "on"
# nginx['gzip_http_version'] = "1.0"
# nginx['gzip_comp_level'] = "2"
# nginx['gzip_proxied'] = "any"
# nginx['gzip_types'] = [ "text/plain", "text/css", "application/x-javascript", "text/xml", "application/xml", "application/xml+rss", "text/javascript", "application/json" ]
# nginx['keepalive_timeout'] = 65
# nginx['client_max_body_size'] = '250m'
# nginx['proxy_cache'] = false
# nginx['cache_max_size'] = '10g'
# nginx['cache_expires'] = '48h'
# nginx['resolver'] = nil # set nginx resolver tag e,g '8.8.8.8 8.8.4.4'
# nginx['software_lb'] = false
# When set resolver and contactpoints must also be set
# nginx['sticky_cookie'] = nil # 'auth_session_id'
## Set google analytics access from reverse proxy
## When analytics is true, resolver must be set
# nginx['analytics'] = false
# nginx['redirect_http_to_https'] = false
# nginx['redirect_http_to_https_port'] = 80
# nginx['ssl_certificate'] = "#{node['package']['config-dir']}/ssl/#{node['fqdn']}.crt"
# nginx['ssl_certificate_key'] = "#{node['package']['config-dir']}/ssl/#{node['fqdn']}.key"
# nginx['ssl_ciphers'] = "ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4"
# nginx['ssl_prefer_server_ciphers'] = "on"
# nginx['ssl_protocols'] = "TLSv1 TLSv1.1 TLSv1.2" # recommended by https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html & https://cipherli.st/
# nginx['ssl_session_cache'] = "builtin:1000  shared:SSL:10m" # recommended in http://nginx.org/en/docs/http/ngx_http_ssl_module.html
# nginx['ssl_session_timeout'] = "5m" # default according to http://nginx.org/en/docs/http/ngx_http_ssl_module.html
# nginx['ssl_dhparam'] = nil # Path to dhparam.pem
# nginx['listen_addresses'] = ['*']
# nginx['listen_addresses_ipv6'] = ['::']
# nginx['listen_ipv4_only'] = false
# nginx['listen_port'] = nil # override only if you have a reverse proxy
# nginx['listen_https'] = nil # override only if your reverse proxy internally communicates over HTTP
# nginx['set_real_ip_from'] = nil # array type of network CIDR
# nginx['set_real_ip_header'] = "X-Forwarded-For"
# nginx['set_real_ip_recursive'] = "on"
# nginx['set_intr_ip_from'] = nil # array type of internal network ips ['1.2.3', '1.2.3.4']
# nginx['set_intr_map_name'] = "isinternalx" # isinternalr (using realip_remote_addr) | isinternalx (using x-forwarded-for)
# nginx['custom_nginx_config'] = nil
# nginx['custom_http_config'] = nil
# nginx['custom_aerobase_config'] = nil
